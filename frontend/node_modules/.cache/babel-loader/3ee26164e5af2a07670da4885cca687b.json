{"ast":null,"code":"import _regeneratorRuntime from \"/home/andre/code/LocalMapsApp/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/andre/code/LocalMapsApp/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/andre/code/LocalMapsApp/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/andre/code/LocalMapsApp/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/andre/code/LocalMapsApp/web/src/pages/New/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport { Container, Button, ButtonContainer, CategoryBox, CategoryContainer, CategoryImage, Form, FormTitle, MapContainer, Section } from \"./styles\";\nimport { Marker, TileLayer } from \"react-leaflet\";\nimport { categories } from \"./categories\";\nimport useGetLocation from \"../../hooks/useGetLocation\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function New() {\n  _s();\n\n  var _this = this;\n\n  var history = useHistory();\n\n  var _useState = useState({\n    name: \"\",\n    description: \"\",\n    contact: \"\",\n    category: \"\",\n    coords: [0, 0]\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValues = _useState2[0],\n      setFormValues = _useState2[1];\n\n  var _useGetLocation = useGetLocation(),\n      coords = _useGetLocation.coords;\n\n  function onSubmit() {\n    return _onSubmit.apply(this, arguments);\n  }\n\n  function _onSubmit() {\n    _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var request;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:8080/store', {\n                method: 'POST',\n                headers: {\n                  \"Content-Type\": 'application/json'\n                },\n                body: JSON.stringify(_objectSpread(_objectSpread({}, formValues), {}, {\n                  latitude: formValues.coords[0],\n                  longitude: formValues.coords[1]\n                }))\n              });\n\n            case 2:\n              request = _context.sent;\n\n              if (request.ok) {\n                toast('Estabelecimento gravado com sucesso!', {\n                  type: 'success',\n                  autoClose: 2000,\n                  onClose: function onClose() {\n                    return history.push(\"/home\");\n                  }\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onSubmit.apply(this, arguments);\n  }\n\n  if (!coords) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Obtendo localizacao ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(formValues);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        children: \"Cadastro do comercio local\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: \"Dados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"nome do local\",\n        name: \"name\",\n        value: formValues.name,\n        onChange: setFormValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Descricao\",\n        name: \"description\",\n        value: formValues.description,\n        onChange: setFormValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Contato\",\n        name: \"contact\",\n        value: formValues.contact,\n        onChange: setFormValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: \"Endereco\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: {\n          lat: coords[0],\n          lng: coords[1]\n        },\n        zoom: 13,\n        whenCreated: function whenCreated(map) {\n          map.addEventListener(\"click\", function (event) {\n            setFormValues(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                coords: [event.latlng.lat, event.latlng.lng]\n              });\n            });\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [formValues.coords[0], formValues.coords[1]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: \"Categoria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CategoryContainer, {\n        children: categories.map(function (category) {\n          return /*#__PURE__*/_jsxDEV(CategoryBox, {\n            onClick: function onClick() {\n              setFormValues(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  category: category.key\n                });\n              });\n            },\n            isActive: formValues.category === category.key,\n            children: [/*#__PURE__*/_jsxDEV(CategoryImage, {\n              src: category.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, _this), category.label]\n          }, category.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(New, \"oFcPuYt/TqUkhwSZ2IJsfFmK/D8=\", false, function () {\n  return [useHistory, useGetLocation];\n});\n\n_c = New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/home/andre/code/LocalMapsApp/web/src/pages/New/index.tsx"],"names":["useState","Input","Container","Button","ButtonContainer","CategoryBox","CategoryContainer","CategoryImage","Form","FormTitle","MapContainer","Section","Marker","TileLayer","categories","useGetLocation","toast","useHistory","New","history","name","description","contact","category","coords","formValues","setFormValues","onSubmit","fetch","method","headers","body","JSON","stringify","latitude","longitude","request","ok","type","autoClose","onClose","push","console","log","lat","lng","map","addEventListener","event","prev","latlng","key","url","label"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,eAHF,EAIEC,WAJF,EAKEC,iBALF,EAMEC,aANF,EAOEC,IAPF,EAQEC,SARF,EASEC,YATF,EAUEC,OAVF,QAWO,UAXP;AAaA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,eAAlC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA;;AAE5B,MAAMC,OAAO,GAAGF,UAAU,EAA1B;;AACA,kBAAoCjB,QAAQ,CAAC;AAC3CoB,IAAAA,IAAI,EAAE,EADqC;AAE3CC,IAAAA,WAAW,EAAE,EAF8B;AAG3CC,IAAAA,OAAO,EAAE,EAHkC;AAI3CC,IAAAA,QAAQ,EAAE,EAJiC;AAK3CC,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AALmC,GAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAQA,wBAAmBX,cAAc,EAAjC;AAAA,MAAQS,MAAR,mBAAQA,MAAR;;AAX4B,WAabG,QAba;AAAA;AAAA;;AAAA;AAAA,yEAa5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACwBC,KAAK,CAAC,6BAAD,EAAiC;AAC1DC,gBAAAA,MAAM,EAAE,MADkD;AAE1DC,gBAAAA,OAAO,EAAE;AACP,kCAAiB;AADV,iBAFiD;AAK1DC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,iCACDR,UADC;AAEJS,kBAAAA,QAAQ,EAAET,UAAU,CAACD,MAAX,CAAkB,CAAlB,CAFN;AAGJW,kBAAAA,SAAS,EAAEV,UAAU,CAACD,MAAX,CAAkB,CAAlB;AAHP;AALoD,eAAjC,CAD7B;;AAAA;AACQY,cAAAA,OADR;;AAaE,kBAAIA,OAAO,CAACC,EAAZ,EAAgB;AACdrB,gBAAAA,KAAK,CAAC,sCAAD,EAA0C;AAC7CsB,kBAAAA,IAAI,EAAE,SADuC;AAE7CC,kBAAAA,SAAS,EAAE,IAFkC;AAG7CC,kBAAAA,OAAO,EAAE;AAAA,2BAAMrB,OAAO,CAACsB,IAAR,CAAa,OAAb,CAAN;AAAA;AAHoC,iBAA1C,CAAL;AAOD;;AArBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAb4B;AAAA;AAAA;;AAuC5B,MAAI,CAACjB,MAAL,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDkB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,UAAZ;AACA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEA,UAAU,CAACL,IAHpB;AAIE,QAAA,QAAQ,EAAEM;AAJZ;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,KAAK,EAAED,UAAU,CAACJ,WAHpB;AAIE,QAAA,QAAQ,EAAEK;AAJZ;AAAA;AAAA;AAAA;AAAA,cAVF,eAiBE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,KAAK,EAAED,UAAU,CAACH,OAHpB;AAIE,QAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA,cAjBF,eAwBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF,eA0BE,QAAC,YAAD;AACE,QAAA,MAAM,EACJ;AACEkB,UAAAA,GAAG,EAAEpB,MAAM,CAAC,CAAD,CADb;AAEEqB,UAAAA,GAAG,EAAErB,MAAM,CAAC,CAAD;AAFb,SAFJ;AAOE,QAAA,IAAI,EAAE,EAPR;AAQE,QAAA,WAAW,EAAE,qBAACsB,GAAD,EAAS;AACpBA,UAAAA,GAAG,CAACC,gBAAJ,CAAqB,OAArB,EAA8B,UAACC,KAAD,EAA8B;AAC1DtB,YAAAA,aAAa,CAAC,UAACuB,IAAD;AAAA,qDACTA,IADS;AAEZzB,gBAAAA,MAAM,EAAE,CAACwB,KAAK,CAACE,MAAN,CAAaN,GAAd,EAAmBI,KAAK,CAACE,MAAN,CAAaL,GAAhC;AAFI;AAAA,aAAD,CAAb;AAID,WALD;AAMD,SAfH;AAAA,gCAiBE,QAAC,SAAD;AACE,UAAA,WAAW,EAAC,0EADd;AAEE,UAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAqBE,QAAC,MAAD;AACE,UAAA,QAAQ,EACN,CAACpB,UAAU,CAACD,MAAX,CAAkB,CAAlB,CAAD,EAAuBC,UAAU,CAACD,MAAX,CAAkB,CAAlB,CAAvB;AAFJ;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF,eAqDE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArDF,eAsDE,QAAC,iBAAD;AAAA,kBACGV,UAAU,CAACgC,GAAX,CAAe,UAACvB,QAAD,EAAc;AAC5B,8BACE,QAAC,WAAD;AAEE,YAAA,OAAO,EAAE,mBAAM;AACbG,cAAAA,aAAa,CAAC,UAACuB,IAAD;AAAA,uDACTA,IADS;AAEZ1B,kBAAAA,QAAQ,EAAEA,QAAQ,CAAC4B;AAFP;AAAA,eAAD,CAAb;AAID,aAPH;AAQE,YAAA,QAAQ,EAAE1B,UAAU,CAACF,QAAX,KAAwBA,QAAQ,CAAC4B,GAR7C;AAAA,oCAUE,QAAC,aAAD;AAAe,cAAA,GAAG,EAAE5B,QAAQ,CAAC6B;AAA7B;AAAA;AAAA;AAAA;AAAA,qBAVF,EAWG7B,QAAQ,CAAC8B,KAXZ;AAAA,aACO9B,QAAQ,CAAC4B,GADhB;AAAA;AAAA;AAAA;AAAA,mBADF;AAeD,SAhBA;AADH;AAAA;AAAA;AAAA;AAAA,cAtDF,eA0EE,QAAC,eAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1EF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkFD;;GA9HuBjC,G;UAEND,U,EASGF,c;;;KAXGG,G","sourcesContent":["import { useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport {\n  Container,\n  Button,\n  ButtonContainer,\n  CategoryBox,\n  CategoryContainer,\n  CategoryImage,\n  Form,\n  FormTitle,\n  MapContainer,\n  Section,\n} from \"./styles\";\nimport { LatLngExpression, LeafletMouseEvent } from \"leaflet\";\nimport { Marker, TileLayer } from \"react-leaflet\";\nimport { categories } from \"./categories\";\nimport useGetLocation from \"../../hooks/useGetLocation\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router\";\n\n\nexport default function New() {\n\n  const history = useHistory();\n  const [formValues, setFormValues] = useState({\n    name: \"\",\n    description: \"\",\n    contact: \"\",\n    category: \"\",\n    coords: [0, 0],\n  });\n\n  const { coords } = useGetLocation();\n\n  async function onSubmit () {\n    const request = await fetch('http://localhost:8080/store' , {\n      method: 'POST',\n      headers: {\n        \"Content-Type\" : 'application/json'\n      },\n      body: JSON.stringify({\n        ...formValues,\n        latitude: formValues.coords[0],\n        longitude: formValues.coords[1]\n      })\n    });\n\n    if (request.ok) {\n      toast('Estabelecimento gravado com sucesso!' , {\n        type: 'success',\n        autoClose: 2000,\n        onClose: () => history.push(\"/home\")\n          \n        \n      })\n    }\n\n\n  }\n\n  if (!coords) {\n    return <h1>Obtendo localizacao ...</h1>;\n  }\n\n  console.log(formValues)\n  return (\n    <Container>\n      <Form>\n        <FormTitle>Cadastro do comercio local</FormTitle>\n        <Section>Dados</Section>\n        <Input\n          label=\"nome do local\"\n          name=\"name\"\n          value={formValues.name}\n          onChange={setFormValues}\n        />\n\n        <Input\n          label=\"Descricao\"\n          name=\"description\"\n          value={formValues.description}\n          onChange={setFormValues}\n        />\n\n        <Input\n          label=\"Contato\"\n          name=\"contact\"\n          value={formValues.contact}\n          onChange={setFormValues}\n        />\n\n        <Section>Endereco</Section>\n\n        <MapContainer\n          center={\n            {\n              lat: coords[0],\n              lng: coords[1],\n            } as LatLngExpression\n          }\n          zoom={13}\n          whenCreated={(map) => {\n            map.addEventListener(\"click\", (event: LeafletMouseEvent) => {\n              setFormValues((prev) => ({\n                ...prev,\n                coords: [event.latlng.lat, event.latlng.lng],\n              }));\n            });\n          }}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Marker\n            position={\n              [formValues.coords[0], formValues.coords[1]] as LatLngExpression\n            }\n          />\n        </MapContainer>\n        <Section>Categoria</Section>\n        <CategoryContainer>\n          {categories.map((category) => {\n            return (\n              <CategoryBox\n                key={category.key}\n                onClick={() => {\n                  setFormValues((prev) => ({\n                    ...prev,\n                    category: category.key,\n                  }));\n                }}\n                isActive={formValues.category === category.key}\n              >\n                <CategoryImage src={category.url} />\n                {category.label}\n              </CategoryBox>\n            );\n          })}\n        </CategoryContainer>\n\n        <ButtonContainer>\n          <Button type=\"submit\">Salvar</Button>\n        </ButtonContainer>\n      </Form>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}